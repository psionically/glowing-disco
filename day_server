/ --------------------------------------------------------------------------
// Description: This program will be used to build a network client/server
// system that implements the "Daytime small server" as documented in RFC 
// 867. This is the server portion.
// --------------------------------------------------------------------------

#include <stdio.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <netdb.h>

#include <stdlib.h>
#include <unistd.h>
#include <string.h>
#include <time.h>

#define SERVER_PORT 1054
#define MAX_PENDING 5
#define MAX_LINE 256

int main() {

  struct sockaddr_in sin;
  char buf[MAX_LINE];
  int len;
  socklen_t new_len;
  int s, new_s;
  time_t t;
  
  /* build address data structure */
  bzero((char *) &sin, sizeof(sin));
  sin.sin_family = AF_INET;
  sin.sin_addr.s_addr = INADDR_ANY; //specify the interface to listen on
  sin.sin_port = htons(SERVER_PORT);
  
  /* setup passive open */
  if((s = socket(PF_INET, SOCK_STREAM, 0)) < 0)
  {
    printf("The socket call has failed.");
    exit(1);
  }

  if((bind(s, (struct sockaddr *) &sin, sizeof(sin))) < 0)
  {
    printf("The bind call has failed.");
    exit(1);
  }

  listen(s, MAX_PENDING);   //listen mode
  
  /* wait for connection, then receive and print data */
  while(1)
  { 
    if((new_s = accept(s, (struct sockaddr *) &sin, &new_len)) < 0)
    {
      printf("The accept call has failed.");
      exit(1);
    }
    
    bzero(buf, sizeof(buf));
    while((len  = recv(new_s, buf, sizeof(buf), 0)) > 0)
    {
      bzero(buf, sizeof(buf));
      t = time(0);
      strlcpy(buf, ctime(&t), sizeof(buf));
      send(new_s, buf, sizeof(buf), 0);
      close(new_s);
    }

  }  

  return 0;
}
